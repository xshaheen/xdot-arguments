root = true

############ Core Options

[*]
charset = utf-8
end_of_line = lf
trim_trailing_whitespace = true
insert_final_newline = true
indent_size = 2
tab_width = 2
indent_style = space
max_line_length = 120

############ File Extension Settings

# Web Files
[*.{htm,html,js,jsm,ts,tsx,cjs,cts,ctsx,mjs,mts,mtsx,css,sass,scss,less,pcss,svg,vue}]
indent_size = 2

# min files don't reformatting
[*.min.*]
trim_trailing_whitespace = false
insert_final_newline = false

# Batch Files
[*.{cmd, bat}]
end_of_line = crlf

# YML Files
[*.yml]
indent_size = 2
tab_width = 2
indent_style = space

# Markdown Files
[*.md]
trim_trailing_whitespace = false

[*.{cs, csx, cake, vb, vbx, razor, cpp, c}]
indent_size = 4
tab_width = 4

# Markdown Files
[*.md]
trim_trailing_whitespace = false

# .NET
[*.{cs, csx, cake, vb, vbx}]

############ .NET Code Style Severities

# CA1716:Identifiers should not match keywords
dotnet_diagnostic.ca1716.severity = suggestion
# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.ca2007.severity = none
# CA1062: Validate arguments of public methods
dotnet_diagnostic.ca1062.severity = none
# CA1034: Nested types should not be visible
dotnet_diagnostic.ca1034.severity = none
# CA1054: URI parameters should not be strings
dotnet_diagnostic.ca1054.severity = none
# CA1056: URI properties should not be strings
dotnet_diagnostic.ca1056.severity = none
# CA1308: Normalize strings to uppercase
dotnet_diagnostic.ca1308.severity = suggestion
# CA1000: Do not declare static members on generic types
dotnet_diagnostic.ca1000.severity = suggestion
# CA1014: Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.ca1014.severity = none
# CA1031: Do not catch general exception types
dotnet_diagnostic.ca1031.severity = silent
# CA1032: Implement standard exception constructors
dotnet_diagnostic.ca1032.severity = silent
# CA2016: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.ca2016.severity = suggestion
# CA1040: Avoid empty interfaces
dotnet_diagnostic.ca1040.severity = silent
# CA1055: URI return values should not be strings
dotnet_diagnostic.ca1055.severity = silent
# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.ca1310.severity = suggestion
# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.ca1307.severity = suggestion
# CA1305: Specify IFormatProvider
dotnet_diagnostic.ca1305.severity = suggestion
# CA2234: Pass System.Uri objects instead of strings
dotnet_diagnostic.ca2234.severity = suggestion
# CA1304: Specify CultureInfo
dotnet_diagnostic.ca1304.severity = suggestion
# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.ca1303.severity = suggestion
# CA1309: Use ordinal StringComparison
dotnet_diagnostic.ca1309.severity = suggestion
# CA1805: Do not initialize unnecessarily.
dotnet_diagnostic.ca1805.severity = suggestion
# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.ca1707.severity = warning
# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.ca1708.severity = warning
# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.ca1711.severity = suggestion
# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.ca1715.severity = warning
# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.ca1712.severity = warning
# CA1720: Identifiers should not contain type names
dotnet_diagnostic.ca1720.severity = warning
# CA1725: Parameter names should match base declaration
dotnet_diagnostic.ca1725.severity = suggestion
# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.ca2009.severity = warning
# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.ca5350.severity = warning
# CA5351 Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.ca5351.severity = warning
# CA5359: Do not disable certificate validation
dotnet_diagnostic.ca5359.severity = warning
# CA5360: Do not call dangerous methods in deserialization
dotnet_diagnostic.ca5360.severity = warning
# CA5364: Do not use deprecated security protocols
dotnet_diagnostic.ca5364.severity = warning
# CA5379: Ensure key derivation function algorithm is sufficiently strong
dotnet_diagnostic.ca5379.severity = warning
# CA5384: Do not use digital signature algorithm (DSA)
dotnet_diagnostic.ca5384.severity = warning
# CA5385: Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size
dotnet_diagnostic.ca5385.severity = warning
# IDE0055: Fix formatting
dotnet_diagnostic.ide0055.severity = silent
# CA1716: Identifiers should not match keywords
dotnet_code_quality.ca1716.analyzed_symbol_kinds = Namespace, NamedType, Method, Event
# CA1724: Type names should not match namespaces
dotnet_diagnostic.ca1724.severity = suggestion
# CA1812 Avoid uninstantiated internal classes
dotnet_diagnostic.ca1812.severity = suggestion

############ Analyzers

# RCS1175: Unused this parameter | Controlled by dotnet_code_quality_unused_parameters
dotnet_diagnostic.rcs1175.severity = none
# RCS1170: Use read-only auto-implemented property
dotnet_diagnostic.rcs1170.severity = silent
# RCS1021: Convert lambda expression body to expression-body
dotnet_diagnostic.rcs1021.severity = silent
# AsyncFixer01: Unnecessary async/await usage
dotnet_diagnostic.asyncfixer01.severity = suggestion
# AsyncFixer02: Long-running or blocking operations inside an async method
dotnet_diagnostic.asyncfixer02.severity = error
# VSTHRD103: Call async methods when in an async method
dotnet_diagnostic.vsthrd103.severity = error
# AsyncFixer03: Fire & forget async void methods
dotnet_diagnostic.asyncfixer03.severity = error
# VSTHRD100: Avoid async void methods
dotnet_diagnostic.vsthrd100.severity = error
# VSTHRD101: Avoid unsupported async delegates
dotnet_diagnostic.vsthrd101.severity = error
# VSTHRD107: Await Task within using expression
dotnet_diagnostic.vsthrd107.severity = error
# AsyncFixer04: Fire & forget async call inside a using block
dotnet_diagnostic.asyncfixer04.severity = error
# VSTHRD110: Observe result of async calls
dotnet_diagnostic.vsthrd110.severity = error
# VSTHRD002: Avoid problematic synchronous waits
dotnet_diagnostic.vsthrd002.severity = none
# MA0045: Do not use blocking call (make method async)
dotnet_diagnostic.ma0045.severity = error
# AsyncifyInvocation: Use Task Async
dotnet_diagnostic.asyncifyinvocation.severity = error
# AsyncifyVariable: Use Task Async
dotnet_diagnostic.asyncifyvariable.severity = error
# MA0004: Use .ConfigureAwait(false)
dotnet_diagnostic.ma0004.severity = none
# VSTHRD111: Use ConfigureAwait(bool)
dotnet_diagnostic.vsthrd111.severity = none
# RCS1090: Add call to 'ConfigureAwait' (or vice versa)
dotnet_diagnostic.rcs1090.severity = none
# MA0022: Return Task.FromResult instead of returning null
dotnet_diagnostic.ma0022.severity = error
# AsyncFixer05: Downcasting from a nested task to an outer task.
dotnet_diagnostic.asyncfixer05.severity = error
# VSTHRD114: Avoid returning a null Task
dotnet_diagnostic.vsthrd114.severity = error
# VSTHRD200: Use "Async" suffix for async methods
dotnet_diagnostic.vsthrd200.severity = suggestion
# RCS1046: Asynchronous method name should end with 'Async'
dotnet_diagnostic.rcs1046.severity = silent
# MA0040: Specify a cancellation token
dotnet_diagnostic.ma0032.severity = warning
# MA0079: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.ma0079.severity = warning
# MA0080: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.ma0080.severity = error
# RCS1194: Implement exception constructors
dotnet_diagnostic.rcs1194.severity = none
# MA0032: Use an overload with a CancellationToken argument
dotnet_diagnostic.ma0032.severity = none
# MA0040: Flow the cancellation token when available
dotnet_diagnostic.ma0040.severity = none
# MA0048: File name must match type name
dotnet_diagnostic.ma0048.severity = silent
# MA0051: Method is too long
dotnet_diagnostic.ma0051.severity = suggestion

############ .NET Languages Style Rules

# "this." and "Me." qualifiers
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning
# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:warning
dotnet_style_readonly_field = true:warning
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity:suggestion
# Expression-level preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_operator_placement_when_wrapping = end_of_line
dotnet_style_namespace_match_folder = true:suggestion
dotnet_diagnostic.IDE0130.severity = suggestion # IDE0130: Namespace does not match folder structure warning
csharp_style_namespace_declarations = file_scoped:warning
# Null-checking preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
############ C# Style Rules

# var preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent
# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = true:silent
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:none
# Expression-level preferences
csharp_style_inlined_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_switch_expression = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_not_pattern = true:warning
# "Null" checking preferences
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning
# Code block preferences
csharp_prefer_braces = true:suggestion
csharp_prefer_simple_using_statement = true:suggestion
dotnet_diagnostic.IDE0063.severity = suggestion # IDE0063: Use simple 'using' statement
# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning
# Modifier preferences
csharp_prefer_static_local_function = true:warning

############ Unnecessary Code Rules

# .NET Unnecessary code rules
[*.{cs,csx,cake,vb,vbx}]
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_remove_unnecessary_suppression_exclusions = none:suggestion

# C# Unnecessary code rules
[*.{cs,csx,cake}]
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion

############ Formatting Rules

# Organize using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

[*.{cs, csx, cake}]
# Newline options
csharp_new_line_before_open_brace = none
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false
# Spacing options
csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
# Wrap options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

############ .NET Naming Rules

[*.{cs, csx, cake, vb, vbx}]

# Styles

# camel_case_style - Define the camelCase style
dotnet_naming_style.camel_case_style.capitalization = camel_case
# camel_case_style - Define the _camelCase style
dotnet_naming_style._camel_case_style.capitalization = camel_case
dotnet_naming_style._camel_case_style.required_prefix = _
# pascal_case_style - Define the PascalCase style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# pascal_case_style - Define the _PascalCase style
dotnet_naming_style._pascal_case_style.capitalization = pascal_case
dotnet_naming_style._pascal_case_style.required_prefix = _
# first_upper_style - The first character must start with an upper-case character
dotnet_naming_style.first_upper_style.capitalization = first_word_upper
# prefix_interface_with_i_style - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i_style.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i_style.required_prefix = I
# prefix_type_parameters_with_t_style - Generic Type Parameters must be PascalCase and the first character must be a 'T'
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization = pascal_case
dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix = T
# disallowed_style - Anything that has this style applied is marked as disallowed
dotnet_naming_style.disallowed_style.capitalization = pascal_case
dotnet_naming_style.disallowed_style.required_prefix = ____RULE_VIOLATION____
dotnet_naming_style.disallowed_style.required_suffix = ____RULE_VIOLATION____
# internal_error_style - This style should never occur... if it does, it indicates a problem in file or in the parser using the file
dotnet_naming_style.internal_error_style.capitalization = pascal_case
dotnet_naming_style.internal_error_style.required_prefix = ____INTERNAL_ERROR____
dotnet_naming_style.internal_error_style.required_suffix = ____INTERNAL_ERROR____

# Naming Rules

# All public/internal/protected/protected_internal constant fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.public_protected_constant_fields_group.required_modifiers = const
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_kinds = field
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.symbols = public_protected_constant_fields_group
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.severity = warning

# All public/protected/protected_internal static readonly fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.public_protected_static_readonly_fields_group.required_modifiers = static, readonly
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_kinds = field
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.symbols = public_protected_static_readonly_fields_group
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.severity = warning

# All private constant fields must be _PascalCase
# Custom
dotnet_naming_symbols.private_constant_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.private_constant_fields_group.required_modifiers = const
dotnet_naming_symbols.private_constant_fields_group.applicable_kinds = field
dotnet_naming_rule.private_constant_fields_must_be_pascal_case_rule.symbols = private_constant_fields_group
dotnet_naming_rule.private_constant_fields_must_be_pascal_case_rule.style = _pascal_case_style
dotnet_naming_rule.private_constant_fields_must_be_pascal_case_rule.severity = suggestion

# All private static readonly fields must be _PascalCase
# Custom
dotnet_naming_symbols.private_static_readonly_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields_group.required_modifiers = readonly, static
dotnet_naming_symbols.private_static_readonly_fields_group.applicable_kinds = field
dotnet_naming_rule.private_static_readonly_fields_must_be_pascal_case_rule.symbols = private_static_readonly_fields_group
dotnet_naming_rule.private_static_readonly_fields_must_be_pascal_case_rule.style = _pascal_case_style
dotnet_naming_rule.private_static_readonly_fields_must_be_pascal_case_rule.severity = suggestion

# All private fields must be _camelCase
# Custom
dotnet_naming_symbols.private_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.private_fields_group.applicable_kinds = field
dotnet_naming_rule.private_fields_group_must_be_camel_case_rule.symbols = private_fields_group
dotnet_naming_rule.private_fields_group_must_be_camel_case_rule.style = _camel_case_style
dotnet_naming_rule.private_fields_group_must_be_camel_case_rule.severity = suggestion

# No other public/protected/protected_internal fields are allowed
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.other_public_internal_protected_fields_group.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.other_public_internal_protected_fields_group.applicable_kinds = field
dotnet_naming_rule.other_public_internal_protected_fields_disallowed_rule.symbols = other_public_internal_protected_fields_group
dotnet_naming_rule.other_public_internal_protected_fields_disallowed_rule.style = disallowed_style
dotnet_naming_rule.other_public_internal_protected_fields_disallowed_rule.severity = error

# This rule should never fire.  However, it's included for at least two purposes:
# First, it helps to understand, reason about, and root-case certain types of issues, such as bugs in .editorconfig parsers.
# Second, it helps to raise immediate awareness if a new field type is added (as occurred recently in C#).
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_accessibilities = *
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_kinds = field
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.symbols = sanity_check_uncovered_field_case_group
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.style = internal_error_style
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.severity = error

# All of the following must be PascalCase:
# - Namespaces
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-namespaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Classes and Enumerations
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Delegates
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces#names-of-common-types
# - Constructors, Properties, Events, Methods
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-type-members
dotnet_naming_symbols.element_group.applicable_kinds = namespace, class, enum, struct, delegate, event, method, property
dotnet_naming_rule.element_rule.symbols = element_group
dotnet_naming_rule.element_rule.style = pascal_case_style
dotnet_naming_rule.element_rule.severity = warning

# Generics Type Parameters use PascalCase and are prefixed with uppercase 'T'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.type_parameter_group.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameter_rule.symbols = type_parameter_group
dotnet_naming_rule.type_parameter_rule.style = prefix_type_parameters_with_t_style
dotnet_naming_rule.type_parameter_rule.severity = warning

# Function parameters use camelCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/naming-parameters
dotnet_naming_symbols.parameters_group.applicable_kinds = parameter
dotnet_naming_rule.parameters_rule.symbols = parameters_group
dotnet_naming_rule.parameters_rule.style = camel_case_style
dotnet_naming_rule.parameters_rule.severity = warning

# All private methods must be _PascalCase()
# Custom
dotnet_naming_symbols.private_methods_group.applicable_accessibilities = private
dotnet_naming_symbols.private_methods_group.applicable_kinds = method
dotnet_naming_rule.private_methods_group_must_be_camel_case_rule.symbols = private_methods_group
dotnet_naming_rule.private_methods_group_must_be_camel_case_rule.style = _pascal_case_style
dotnet_naming_rule.private_methods_group_must_be_camel_case_rule.severity = suggestion

# Local functions must be camelCase
# Custom
dotnet_naming_symbols.local_functions_group.applicable_accessibilities = local
dotnet_naming_symbols.local_functions_group.applicable_kinds = local
dotnet_naming_rule.local_functions_must_be_camel_case_rule.symbols = local_functions_group
dotnet_naming_rule.local_functions_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.local_functions_must_be_camel_case_rule.severity = suggestion

# Local variables must be camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md
dotnet_naming_symbols.stylecop_local_fields_group.applicable_accessibilities = local
dotnet_naming_symbols.stylecop_local_fields_group.applicable_kinds = local
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.symbols = stylecop_local_fields_group
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.severity = warning

# Interfaces use PascalCase and are prefixed with uppercase 'I'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.interface_group.applicable_kinds = interface
dotnet_naming_rule.interface_rule.symbols = interface_group
dotnet_naming_rule.interface_rule.style = prefix_interface_with_i_style
dotnet_naming_rule.interface_rule.severity = warning

############ ReSharper

resharper_enforce_line_ending_style = true

# XML Docs
resharper_xmldoc_indent_child_elements = remove_indent
resharper_xmldoc_indent_text = remove_indent
resharper_xmldoc_blank_line_after_pi = true
resharper_xmldoc_space_before_self_closing = false
resharper_xmldoc_wrap_tags_and_pi = false
resharper_xmldoc_keep_user_linebreaks = true

# .NET align preferences
resharper_int_align_comments = true
resharper_align_multiline_binary_expressions_chain = false
resharper_int_align_fields = false
resharper_int_align_assignments = false
resharper_int_align_nested_ternary = false
resharper_int_align_switch_expressions = false
resharper_int_align_switch_sections = false
resharper_int_align_property_patterns = false

# Keep as its
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = true
resharper_keep_existing_attribute_arrangement = true
resharper_keep_existing_linebreaks = true
resharper_keep_existing_arrangement = true
resharper_keep_existing_initializer_arrangement = true
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_expr_member_arrangement = true
resharper_keep_existing_property_patterns_arrangement = false
resharper_keep_existing_switch_expression_arrangement = false

# Blank lines
resharper_enforce_line_ending_style = true
resharper_wrap_lines = false
resharper_wrap_after_declaration_lpar = true
resharper_wrap_before_declaration_rpar = true
resharper_wrap_after_invocation_lpar = false
resharper_wrap_before_invocation_rpar = false
resharper_wrap_arguments_style = wrap_if_long
resharper_wrap_parameters_style = chop_if_long
resharper_wrap_before_binary_opsign = false
resharper_wrap_before_eq = false
resharper_wrap_before_first_type_parameter_constraint = true
resharper_wrap_verbatim_interpolated_strings = no_wrap
resharper_wrap_before_linq_expression = true
resharper_wrap_before_arrow_with_expressions = false

# Preferences
resharper_outdent_commas = true
resharper_empty_block_style = together_same_line
resharper_nested_ternary_style = simple_wrap
resharper_place_simple_enum_on_single_line = true
resharper_place_linq_into_on_new_line = false
resharper_place_simple_accessorholder_on_single_line = true
resharper_braces_for_ifelse = required_for_multiline
resharper_arguments_literal = named
resharper_trailing_comma_in_multiline_lists = true
resharper_wrap_object_and_collection_initializer_style = chop_if_long
resharper_place_simple_embedded_statement_on_same_line = false
resharper_space_within_single_line_array_initializer_braces = true

# ReSharper inspection severities
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_check_namespace_highlighting = suggestion
resharper_heap_view_can_avoid_closure_highlighting = hint
resharper_html_tag_not_closed_highlighting = warning
resharper_mvc_action_not_resolved_highlighting = suggestion
resharper_mvc_area_not_resolved_highlighting = suggestion
resharper_mvc_controller_not_resolved_highlighting = suggestion
resharper_mvc_invalid_model_type_highlighting = warning
resharper_mvc_partial_view_not_resolved_highlighting = suggestion
resharper_mvc_template_not_resolved_highlighting = suggestion
resharper_mvc_view_component_not_resolved_highlighting = suggestion
resharper_mvc_view_component_view_not_resolved_highlighting = suggestion
resharper_mvc_view_not_resolved_highlighting = suggestion
resharper_not_accessed_positional_property_global_highlighting = suggestion
resharper_razor_layout_not_resolved_highlighting = suggestion
resharper_redundant_argument_default_value_highlighting = suggestion
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_unused_auto_property_accessor_global_highlighting = suggestion
resharper_unused_auto_property_accessor_local_highlighting = suggestion
resharper_unused_type_parameter_highlighting = suggestion

# Inspired by: https://github.com/RehanSaeed/EditorConfig commit d06930296a9e8fbb6f2d8ea39f4c789c3e5399ff
